# -*- coding: utf-8 -*-
"""BALANCE  SHEET UI_AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AwrzaWQZfzkeu3CddJS9z0Fj6hmqO0Sz
"""

# BALANCE SHEET UI_AI
import ipywidgets as widgets
from IPython.display import display,clear_output

from google.colab import drive
drive.mount('/content/drive')

# Assets inputs
current_assets = widgets.FloatText(description="Current Assets:150000.00")
non_current_assets = widgets.FloatText(description = "Non Current Assets:450000.00")

# Liabilities inputs
current_liabilities = widgets.FloatText(description = "Current Liablities:60000.00")
non_current_liabilities = widgets.FloatText(description = "Non Current Liabilities:140000.00")

# Equity inputs
equity = widgets.FloatText(description = "Equity:400000.00")

# Output area
output = widgets.Output()

# TITLE
title = widgets.HTML(value="<h2> BALANCE SHEET input</h2>")

# Button to calculate
calculate_button  = widgets.Button(description = "Generate Balance Sheet:",button_style = 'success')

# Function to handle button click
def generate_balance_sheet(b):
  with output:
    clear_output()
    total_assets = current_assets.value + non_current_assets.value
    total_liabilities = current_liabilities.value + non_current_liabilities.value
    total_liabilities_equity = total_liabilities + equity.value
    print("Balance sheet")
    print("--------------")
    print(f"Assets:")
    print(f"Current assets:${current_assets.value:,.2f}")
    print(f"Non current assets:${non_current_assets.value:,.2f}")
    print(f"Total Assets:${total_assets:,.2f}\n")
    print(f"Liabilities:")
    print(f"Current Liabilities:${current_liabilities.value:,.2f}")
    print(f"Non current Liabilities:${non_current_liabilities.value:,.2f}")
    print(f"Total liabilities:${total_liabilities:,.2f}\n")
    print(f"Equity:${equity.value:,.2f}")
    print(f"Total Liabilities and equity:${total_liabilities_equity:,.2f}")
    if total_assets== total_liabilities + equity.value:
        print("\n Balance sheet is balanced")
    else:
        print("\n Balance sheet is NOT balanced")

# link button click to function
calculate_button.on_click(generate_balance_sheet)

# Display all UI elements
display(title,widgets.HTML("<h4>Assets</h4>"),current_assets,non_current_assets,widgets.HTML("<h4>Liabilities</h4>"),current_liabilities, non_current_liabilities,widgets.HTML("<h4>Equity<h4>"),equity,
          calculate_button,output)