# -*- coding: utf-8 -*-
"""AUTOMATION OF PAYROLL  UI_AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V4O38QIo6FHPSDDcR5TmTgkIe_BA0WKV
"""

# AUTOMATION OF PAYROLL UI_AI
import ipywidgets as widgets
from IPython.display import display, clear_output

title = widgets.HTML(value="<h2>AUTOMATION OF PAYROLL  Inputs<h2>")

# Input widgets
employee_name = widgets.Text(description='Employee Name:[Arun,Sathis,Priya,Ramya]')
employee_id = widgets.Text(description='Employee ID:[101,102,103,104]')
employee_roll = widgets.Text(description='Employee Roll:[Manager,Assistant Manager,Accountant,Sales Executive]')
employee_department = widgets.Text(description='Employee Department:[Admin,HR,Admin,Marketting]')
employee_experience_years = widgets.FloatText(description='Employee Experience(years):[10,5,3,3]')
employee_salary = widgets.Text(description='Employee Salay:[25000,15000,15000,15000]')
da = widgets.Text(description='DA:[5000,3000,3000,3000]')
hra = widgets.Text(description='HRA:[7000,4500,4500,4500]')
travel_allowance = widgets.Text(description='Travel Allowance:[3000,2000,2000,2000]')
other_allowance = widgets.Text(description='Other Allowance:0,0,0,0')
bonus = widgets.Text(description='Bonus:[3300,2000,2000,2000')
gross_salary = widgets.Text(description='Gross Salary:')
pf_deduction = widgets.Text(description='PF Deduction:[3300,2000,2000,2000]')
tax_deduction = widgets.Text(description='Tax Deduction:[8660,5300,5300,5300]')
net_salary = widgets.Label(value ='Net Salary:')

#  Button to calculate
calculate_button = widgets.Button(description='Calculate Net Salary', button_style='success')

# Output
output = widgets.Output()

# Function to calculate Net Salary
def calculate_net_salary(b):
  with output:
    clear_output()
    try:
      # Inputs
      employee_name_input = employee_name.value
      employee_id_input = employee_id.value
      employee_roll_input = employee_roll.value
      employee_department_input = employee_department.value
      employee_experience_years_input = float(employee_experience_years.value)
      employee_salary_input = float(employee_salary.value)
      da_input = float(da.value)
      hra_input = float(hra.value)
      travel_allowance_input = float(travel_allowance.value)
      other_allowance_input = float(other_allowance.value)
      bonus_input = float(bonus.value)

      # Computation
      gross_salary_calc = employee_salary_input + da_input + hra_input + travel_allowance_input + other_allowance_input + bonus_input
      pf_deduction_calc = 0.12 * gross_salary_calc
      tax_deduction_calc = 0.05 * gross_salary_calc
      net_salary_calc = gross_salary_calc - pf_deduction_calc - tax_deduction_calc

      # Update output widgets
      gross_salary.value = f"Gross Salary: ${gross_salary_calc:.2f}"
      net_salary.value = f"Net Salary: ${net_salary_calc:.2f}"

      # Display information
      print(f"employee name:{employee_name_input}\n")
      print(f"employee ID: {employee_id_input}\n")
      print(f"Employee Roll: {employee_roll_input}\n")
      print(f"Employee Department: {employee_department_input}\n")
      print(f"Employee Experince years:{employee_experience_years_input}")
      print(f"Employee Salary: ${employee_salary_input:.2f}\n")
      print(f"Employee Gross Salary:${gross_salary_calc:.2f}")
      print(f"PF Deduction: ${pf_deduction_calc:.2f}\n")
      print(f"Tax Deduction: ${tax_deduction_calc:.2f}\n")
      print(f"Net Salary: ${net_salary_calc:.2f}")

    except ValueError:
      print("Please enter valid numerical values for salary and allowances.")

# Bind button
calculate_button.on_click(calculate_net_salary)

# Layout
display(widgets.VBox([title,employee_name,employee_id,employee_roll,employee_department,employee_experience_years,employee_salary,da,hra,travel_allowance,other_allowance,bonus,gross_salary,pf_deduction,tax_deduction,net_salary,calculate_button,output]))

